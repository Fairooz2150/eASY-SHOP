<section>
  <div class="container">
    <h2 class="main-heading">User Product Requests</h2>
    <div id="orders-container">

      {{#each products}}
      <div class="card">

        <div class="card-header">
          <div class="row header-content">

              <div class="chip">
                {{#ifEquals this.Gender 'Male'}}
                <img src="/images/male-icon.jpg" alt="Male Icon">
                {{else}}
                {{#ifEquals this.Gender 'Female'}}
                <img src="/images/female-icon.jpg" alt="Female Icon">
                {{else}}
                <img src="/images/trans-icon.jpg" alt="Trans Icon">
                {{/ifEquals}}
                {{/ifEquals}}

               <span title="Seller/User Name"> {{this.Seller_First_Name}} {{this.Seller_Last_Name}}</span>
              </div>

            <div class="date row">       
                  {{#ifEquals this.Updations 'Updated'}}

                    <div class="mr-4 mt-2">
                      <b>Updated</b>
                    </div>

                    <div>
                      <b> Date: </b> {{this.UpdatedDate}} <br>
                      <b> Time: </b> {{this.UpdatedTime}}
                    </div>

                  {{/ifEquals}}
            </div>

          </div>
        </div>

      
      <div class="card-body">

              <div class="row mb-3">
                    <div class="Date ml-2">
                      <b> Date: </b> {{this.Date}} <br>
                      <b> Time: </b> {{this.Time}}
                      <p class="card-text mt-2"><b>Status: </b> <span id="status-{{this._id}}">{{this.Status}}</span></p>
                    </div>

                    
                      <div class="seller-details">                  
                          <b>Seller Details:</b><br>
                              <span title="Seller/User ID"> <b>Id</b> {{this.Seller_Id}} </span> <br>

                              <a href="tel:+91{{this.Phone}}"><span title="Phone">
                                <i class="bi bi-telephone"></i> {{this.Phone}} </span></a> <br>
                                
                              <a href="mailto:{{this.Email}}"><span title="Email Id">
                                <i class="bi bi-envelope"></i> {{this.Email}} </span></a> <br>
                              
                              <a href="https://wa.me/{{this.Whatsapp}}"> <span title="WhatsApp">
                                <i class="bi bi-whatsapp"></i> {{this.Whatsapp}} </span> </a>
                      </div>
                    

                    <address class="address">
                      <b>Shop Address:</b><br>
                      {{newlineToBr this.Shop_Address}}               
                    </address>
              </div>

        <div>

          <table class="table mt-5" id="productsTable">
                <thead>
                    <tr>
                        <th scope="col">Item</th>
                        <th scope="col">Price</th>
                    </tr>
                </thead>

            <tbody>  
              <tr>
                <td>
                    <div class="row">
                      
                      <div>
                        <img src="/product-images/{{this._id}}_0.jpg"  alt="Image not available"
                        onerror="this.onerror=null; this.src='/images/no-images-available.png';" class="product_image">
                      </div>

                      <div class="product_details ml-3 ">
                          <b title="Title">{{this.Name}} </b> <br>
                          <span class="text-muted" title="Category">{{this.Category}}</span> <br>
                          <span title="Stock Count"><b>Stock: </b> {{this.Stock_Count}}</span> <br>
                          <span title="Description">{{newlineToBr this.Description}}</span>
                      </div>
      
                    </div>
                </td>

                <td>
                   <div class="Price" >
                    <b>Offer Price: </b><span id="Price">{{this.Offer_Price}}</span> <br>
                    ({{this.Offer_Percentage}}% Off) <br>
                    <b>Net Price: </b><span id="Price">{{this.Actual_Price}}</span>
                  </div> 
              </td>

              </tr>
            </tbody>
          </table>
        </div>
      </div>
      <div class="card-footer">
        <div class="footer-content">
          <div id="action-buttons-{{this._id}}" class="actions row">
            {{#ifEquals this.Status 'Pending'}}
            <button onclick="updateUserProdStatus('{{this._id}}', 'Declined')" class="btn decline mr-3"
              id="decline-btn-{{this._id}}">Decline</button>
            <button onclick="updateUserProdStatus('{{this._id}}', 'Approved')" class="btn approve"
              id="approve-btn-{{this._id}}">Approve</button>
            {{else}}
            {{#ifEquals this.Status 'Declined'}}
            <button onclick="updateUserProdStatus('{{this._id}}', 'Approved')" class="btn approve"
              id="approve-btn-{{this._id}}">Approve</button>
            {{/ifEquals}}
            {{/ifEquals}}
          </div>
        </div>
      </div>
    </div>
      {{/each}}
    </div>
  </div>

   <!-- Confirmation Modal -->
  <div id="confirmationModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <p id="modalMessage">Are you sure?</p>
      <button id="confirmRemove" class="btn ">Yes</button>
      <button id="cancelRemove" class="btn ">Cancel</button>
    </div>
  </div>

</section>

<script>


  // Function to format number with commas
    function formatNumber(number) {
      return number.toLocaleString('en-IN'); // 'en-IN' for Indian number formatting 
    }

  // format offer price number with commas
     document.addEventListener('DOMContentLoaded', function() {
      const Prices = document.querySelectorAll('#Price');
      Prices.forEach(element => {
        const priceString = element.textContent.trim();
        const price = parseFloat(priceString.replace(/[^\d.-]/g, ''));
        if (!isNaN(price)) {
          element.textContent = 'â‚¹' + formatNumber(price);
        }
      });
    });

    
  // Function to show the confirmation modal
  function showConfirmationModal(message, confirmCallback) {
    // Get the modal
    var modal = document.getElementById("confirmationModal");

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];

    // Get the confirm and cancel buttons
    var confirmButton = document.getElementById("confirmRemove");
    var cancelButton = document.getElementById("cancelRemove");

    // Set the modal message
    const modalMessage = document.getElementById('modalMessage');
    
    // Apply the message with styled productName
    modalMessage.innerHTML = message;
    modalMessage.style.overflow = 'hidden';
    modalMessage.style.textOverflow = 'ellipsis';
    modalMessage.style.webkitLineClamp = '3';
    modalMessage.style.display = '-webkit-box';
    modalMessage.style.webkitBoxOrient = 'vertical';

    // Show the modal
    modal.style.display = "block";

    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
      modal.style.display = "none";
    }

    // When the user clicks on confirm button
    confirmButton.onclick = function () {
      modal.style.display = "none";
      confirmCallback();
    }

    // When the user clicks on cancel button
    cancelButton.onclick = function () {
      modal.style.display = "none";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
      if (event.target == modal) {
        modal.style.display = "none";
      }
    }
  }
  



  function updateUserProdStatus(Id, Status) {
      showConfirmationModal(`User Product status updated to <span style="font-weight:bold">${Status}</span>`, function() {
    $.ajax({
      url: '/admin/update-user-products-status',
      method: 'POST',
      data: { Id: Id, Status: Status },
      success: function (response) {
        if (response.success) {
          document.getElementById('status-' + Id).innerText = Status;

          var approveBtn = document.getElementById('approve-btn-' + Id);
          var declineBtn = document.getElementById('decline-btn-' + Id);

          if (Status === 'Approved') {
            if (approveBtn) approveBtn.style.display = 'none';
            if (declineBtn) declineBtn.style.display = 'none';
          } else if (Status === 'Declined') {
            if (declineBtn) declineBtn.style.display = 'none';
            if (approveBtn) approveBtn.style.display = 'inline-block';
          }
        } else {
          alert('Failed to update user product status');
        }
      },
      error: function (error) {
        console.error('Error:', error);
        alert('An error occurred while updating the user product status');
      }
    });
    });
  }

</script>

<style>
  a {
    color: black;
    text-decoration: none;
    /* Remove underline by default */
  }

  a:hover {
   color: #309db0;
    text-decoration: none;
    /* Ensure underline does not appear on hover */
  }

  .main-heading {
    text-align: center;
    margin-top: 30px;
  }

 .card {
      margin-top: 65px;
      border-radius: 20px;
      overflow: hidden; 
      margin-bottom: 50px;
      box-shadow: 0 14px 16px rgba(21, 105, 131, 0.5);
    }
    
    .card-header{
      background-color: #278a9b96;
      color: white;
    }

    .chip {
      display: inline-block;
      padding: 0 25px;
      height: 50px;
      font-size: 16px;
      line-height: 50px;
      border-radius: 25px;
      background-color: #f1f1f1;
      color: #309db0;
      font-weight: 500;
      font-size: large;
    }
  
    .chip img {
      float: left;
      margin: 0 10px 0 -25px;
      height: 50px;
      width: 50px;
      border-radius: 50%;
    }

    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
      width: 100%;
    }

  .Date{
    width: 15em;
  }

  .seller-details{
      width: 20em;
  }

   .address {
      margin-bottom: 2em;
      width: 25em;
    }

  .product_image{
    height: 120px;
    width: 130px;
     box-shadow: 0 4px 12px rgba(21, 105, 131, 0.5);
  }

    .card-footer {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: #278a9b96;
      color: white;
      height: 4em;
    }

    .footer-content {
      display: flex;
      width: 100%;
      justify-content: space-between;
      align-items: center;
      font-size: large;
    }

  .actions {
    margin-left: auto;
    margin-right: 10px;
  }


   .approve {
    background-color: white;
    color: #278a9b;
    font-weight: bold;
    width: 6em;
    border-radius: 20px;
    box-shadow: 0 6px 10px rgba(49, 133, 158, 0.5);
    transition: all 0.3s ease;
   } 
    .approve:hover{
      color: #278a9b;
    transform: scale(1.1);
    }

       .decline {
    background-color: white;
    color: #c77a37;
    font-weight: bold;
    width: 6em;
    border-radius: 20px;
    box-shadow: 0 6px 10px rgba(49, 133, 158, 0.5);
    transition: all 0.3s ease;
   } 
    .decline:hover{
      color: #c77a37;
    transform: scale(1.1);
    }


  .date{
    padding: 0 15px;
  }

  .product_details {
    width: 45em;
  }
  .Price{
    width: 10em;
  }

   /* The Modal (background) */
  .modal {
    display: none;
    /* Hidden by default */
    position: fixed;
    /* Stay in place */
    z-index: 1;
    /* Sit on top */
    left: 0;
    top: 0;
    width: 100%;
    /* Full width */
    height: 100%;
    /* Full height */
    overflow: auto;
    /* Enable scroll if needed */
    background-color: rgb(0, 0, 0);
    /* Fallback color */
    background-color: rgba(0, 0, 0, 0.4);
    /* Black w/ opacity */
  }

  /* Modal Content/Box */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    /* 15% from the top and centered */
    padding: 20px;
    border-radius: 10px; 
    box-shadow: 0 0 20px rgba(18, 155, 150, 0.5);
    width: 80%;
    /* Could be more or less, depending on screen size */
    max-width: 400px;
    /* Maximum width */
    text-align: center;
  }

  /* The Close Button */
  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: rgb(6, 51, 53);
    text-decoration: none;
    cursor: pointer;
  }

  #confirmRemove {
    padding: 10px 20px;
    margin: 10px;
    background-image: linear-gradient(to left, #f07b0d, rgb(245, 157, 64));
    color: white;
    border: none;
    border-radius: 20px;
  }
  #cancelRemove{
    padding: 10px 20px;
    margin: 10px;
    background-image: linear-gradient(to left, #309db0, rgb(71, 172, 209));
    color: white;
    border: none;
    border-radius: 20px;
  }
   #cancelRemove:hover{
    background-image: linear-gradient(to right, #309db0, rgb(71, 172, 209));
    color: white;
  }
  #confirmRemove:hover{
   background-image: linear-gradient(to right, #f07b0d, rgb(245, 157, 64));
    color: white;
  }
</style>