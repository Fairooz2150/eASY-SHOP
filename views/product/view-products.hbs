<section>
  <div class="container-fluid mt-5">
    <div class="row " id="product-container">
      {{#each products}}
      <div class="col-lg-2 col-md-4 col-6 pb-4 ">
        <div class="card">
          <a href="/view-product/{{this._id}}">
            <div class="flip-card">
              <div class="flip-card-inner">

                <div class="flip-card-front">
                  <img class="card-img-top" src="/product-images/{{this._id}}_0.jpg" alt="Image not available"
                    onerror="this.onerror=null; this.src='/images/no-images-available.png';">
                </div>

                <div class="flip-card-back">
                  <img class="card-img-top" src="/product-images/{{this._id}}_1.jpg" alt="No more Images are available"
                    onerror="this.onerror=null; this.src='/images/no-more-images.jpg';">
                </div>

              </div>
            </div>

            <div class="card-body p-1">
              <h5 class="card-title ml-1" title="{{this.Name}}">{{this.Name}}</h5>

              <div class="row ml-1">
                <div>
                  <p class="text-muted category" title="{{this.Category}}">{{this.Category}}</p>
                </div>
                {{#ifEquals this.Product_Owner 'Admin'}}
                <div class="eASY-assurance ml-1"><img src="/images/eASY-assurance.png" class="eASY-assurance"
                    alt="eASY-assurance">
                  <p hidden>easy-assurance</p>
                </div>
                {{/ifEquals}}
              </div>
              <div class="row ml-1 prices">
                <div class="mt-2">
                  <p class="card-text" title="Offer percentage" id="offer-percentage"><b> {{this.Offer_Percentage}}%
                    </b><small>off</small></p>
                </div>
                <div class="ml-2 ">
                  <b class="card-text" title="Offer price" id="offer-price">{{this.Offer_Price}}</b>
                </div>
                <div class="ml-1 mt-2">
                  <p class="card-text text-muted" id="actualPrice" title="M.R.P."><small><small><del
                          id="actual-price">{{this.Actual_Price}}</del></small></small></p>
                </div>
              </div>
          </a>

          <p hidden>{{this.Description}}</p>
          {{#if (gt this.Stock_Count 0)}}
          <button onclick="addToCart('{{this._id}}')" class="btn " id="addtoCart" title="Add to Cart">Add to
            cart</button>
          {{else}}
          <button class="btn" id="out0fStock" title="Out of Stock">Out of Stock</button>
          {{/if}}

        </div>
      </div>
    </div>
    {{/each}}

  </div>
  </div>

  <!-- product added notification -->
  <a href="/cart">
    <div id="Ad">Product added <img src="/images/grocery.gif" class="addcart" alt="Product added">
    </div>
  </a>

  <!-- Advertisement section -->
  <a href="/">
    <div id="popup-sidebar" class="popup-sidebar" title="eASY SHOP Ad">
      <img id="popup-image" src="/images/ad-1.gif" alt="Product Advertisement">
    </div>
  </a>

  <!-- Shows for product out of stock -->
  <div id="confirmationModal" class="modal">
    <div class="modal-content">
      <span class="close">&times;</span>
      <p>Product was out of stock</p>
      <button id="confirmRemove" class="btn confirmBtn">Ok</button>
    </div>
  </div>

</section>

<script>

  /* Out of Stock notification modal*/

  // Get the modal
  var modal = document.getElementById("confirmationModal");

  // Get the <span> element that closes the modal
  var span = document.getElementsByClassName("close")[0];

  // Get the button that closes the modal
  var confirmRemove = document.getElementById("confirmRemove");

  // When the user clicks on <span> (x), close the modal
  span.onclick = function () {
    modal.style.display = "none";
  }

  // When the user clicks on the button, close the modal
  confirmRemove.onclick = function () {
    modal.style.display = "none";
  }

  // When the user clicks anywhere outside of the modal, close it
  window.onclick = function (event) {
    if (event.target == modal) {
      modal.style.display = "none";
    }
  }
  /* End of Out of Stock notification modal function */


  //Add to cart
  function addToCart(proId) {
    $.ajax({
      url: '/add-to-cart/' + proId,
      method: 'get',
      success: (response) => {
        if (response.status) {
          let count = $('#cart-count').html();
          count = parseInt(count) + 1;
          $("#cart-count").html(count);

          var ad = document.getElementById("Ad");

          // Add the "show" class to DIV
          ad.className = "show";

          // After 3 seconds, remove the show class from DIV
          setTimeout(function () {
            ad.className = ad.className.replace("show", "");
          }, 3000);
        } else {
          // Show the modal
          modal.style.display = "block";
        }
      },
      error: (err) => {
        console.error("Error adding to cart:", err);
        location.reload();  // Reload the page in case of an error
      }
    });
  }



  // Function for Advertisement
  function slidePopupSidebar() {
    const popupSidebar = document.getElementById('popup-sidebar');
    const popupImage = document.getElementById('popup-image');
    const imageUrls = [
      "/images/ad-1.gif",
      "/images/ad-2.gif",
      "/images/ad-3.gif",
      "/images/ad-4.gif"
    ];
    let currentIndex = 0;

    // Slide in the popup sidebar immediately
    popupSidebar.style.right = '0';
    // Slide out after 3 seconds
    setTimeout(() => {
      popupSidebar.style.right = '-300px';
    }, 3000);

    // Change image every 3 seconds
    setInterval(() => {
      currentIndex = (currentIndex + 1) % imageUrls.length;
      popupImage.src = imageUrls[currentIndex];
      // Slide in the popup sidebar
      popupSidebar.style.right = '0';
      // Slide out after 3 seconds
      setTimeout(() => {
        popupSidebar.style.right = '-300px';
      }, 3000);
    }, 10000);
  }

  // Call the slidePopupSidebar function when the page is loaded
  window.onload = slidePopupSidebar;


  // Function to format number with commas
  function formatNumber(number) {
    return number.toLocaleString('en-IN'); // 'en-IN' for Indian number formatting (₹ separation)
  }


  document.addEventListener('DOMContentLoaded', function () {
    const offerPrices = document.querySelectorAll('#offer-price');
    offerPrices.forEach(element => {
      const priceString = element.textContent.trim();
      const price = parseFloat(priceString.replace(/[^\d.-]/g, ''));
      if (!isNaN(price)) {
        element.textContent = '₹' + formatNumber(price);
      }
    });
  });

  document.addEventListener('DOMContentLoaded', function () {
    const actualPrices = document.querySelectorAll('#actual-price');
    actualPrices.forEach(element => {
      const priceString = element.textContent.trim();
      const price = parseFloat(priceString.replace(/[^\d.-]/g, ''));
      if (!isNaN(price)) {
        element.textContent = '₹' + formatNumber(price);
      }
    });
  });



  // Search bar for small screen
  document.getElementById('search-inputs').addEventListener('keyup', function (event) {
    const query = event.target.value;
    searchProducts(query);
  });

  // Search bar for medium screen
  document.getElementById('search-input').addEventListener('keyup', function (event) {
    const query = event.target.value;
    searchProducts(query);
  });

  // Search bar for large screen
  document.getElementById('search-inputL').addEventListener('keyup', function (event) {
    const query = event.target.value;
    searchProducts(query);
  });

  //Search function
  function searchProducts(query) {
    $.ajax({
      url: '/search-products',
      method: 'GET',
      data: { query: query },
      success: (response) => {
        displaySearchResults(response.products);
      }
    });
  }
  //For display Search results
  function displaySearchResults(products) {
    const productContainer = document.getElementById('product-container');
    productContainer.innerHTML = ''; // Clear previous results

    if (products.length === 0) {
      productContainer.innerHTML = `
        <div class="d-flex justify-content-center pb-5 col-12">
            <img src="/images/no-products.png" alt="No Products" style="width:80%; height:90%;"> 
        </div>
    `;
      return;
    }

    products.forEach(product => {
      const productElement = document.createElement('div');
      productElement.classList.add('col-md-4', 'col-lg-2', 'col-6', 'pb-4');
      productElement.innerHTML = `
      <div class="card">
        <a href="/view-product/${product._id}">
          <div class="flip-card">
            <div class="flip-card-inner">
              <div class="flip-card-front">
                <img class="card-img-top" src="/product-images/${product._id}_0.jpg" alt="Image not available" onerror="this.onerror=null; this.src='/images/no-images-available.png';">
              </div>
              <div class="flip-card-back">
                <img class="card-img-top" src="/product-images/${product._id}_1.jpg" alt="No more Images are available" onerror="this.onerror=null; this.src='/images/no-more-images.jpg';">
              </div>
            </div>
          </div>
          <div class="card-body p-1">
            <h5 class="card-title ml-1" title="${product.Name}">${product.Name}</h5>
            <div class="row ml-1">
              <div>
                <p class="text-muted category" title="${product.Category}">${product.Category}</p>
              </div>
              ${product.Product_Owner === 'Admin' ? '<div class="eASY-assurance ml-1"><img src="/images/eASY-assurance.png" class="eASY-assurance" alt="eASY-assurance"> <p hidden>easy-assurance</p> </div>' : ''}
            </div>
            <div class="row mb-2">
              <div class="ml-3 mt-2">
                <p class="card-text" title="Offer percentage" id="offer-percentage"><b>${product.Offer_Percentage}%</b><small> off</small></p>
              </div>
              <div class="ml-3">
                <b class="card-text" title="Offer price" id="offer-price">₹${product.Offer_Price}</b>
              </div>
              <div class="ml-3 mt-2">
                <p class="card-text text-muted" title="M.R.P."><small><small><del id="actual-price">₹${product.Actual_Price}</del></small></small></p>
              </div>
            </div>
          </a>
           <p hidden>${product.Description}</p>
          ${product.Stock_Count > 0 ? `
            <button onclick="addToCart('${product._id}')" class="btn" id="addtoCart">Add to cart</button>
          ` : `
            <button class="btn" id="outOfStock" disabled>Out of Stock</button> 
          `}
          <a href="/cart">
          <div id="Ad">Product added <img src="/images/grocery.gif" class="addcart" alt=""></div>
          </a>
        </div>
      </div>
    `;
      productContainer.appendChild(productElement);
    });
  }

</script>

<style>
  .card {
    box-shadow: 0 2px 6px rgba(21, 105, 131, 0.5);
    width: 14em;
    height: 22.2em;
  }
 

  .card:hover {
    box-shadow: 0 2px 18px rgba(19, 111, 139, 0.5);
  }

  .card-title {
    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;
    color: rgb(40, 155, 155);
    height: 3rem;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    /* number of lines to show */
    -webkit-box-orient: vertical;
  }

  .card-title:hover {
    color: #59b6c6;
  }

  .card-img-top {
    height: 10rem;
  }

  .category {
    width: 7em;
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    /* number of lines to show */
    -webkit-box-orient: vertical;
  }
 

  .eASY-assurance {
    height: 2rem;
    width: 5rem
  }

  #offer-percentage {
    color: rgb(6, 170, 6);
  }

  #offer-price {
    font-size: 25px;
    color: rgb(4, 149, 149);
    font-family: 'Times New Roman', Times, serif
  }
 .prices{
  margin-bottom: 7px;
 }
 

  #addtoCart {
    background-image: linear-gradient(to left, #199cad, rgb(81, 176, 207));
    color: white;
    width: 13.4em;
    cursor: pointer;
    position: relative;
    overflow: hidden;

  }
 @media (max-width: 768px) {
    .card{
       width: 12em;
       box-shadow: 0 2px 4px rgba(21, 105, 131, 0.5);
       height: 19em;
    }
    
    .card-title {
    font-size: 12px;
    height: 1.8rem;
     overflow: hidden;
   
    }
    .prices{
      margin-top: -5px;
  margin-bottom: -2px;
 }
    
     .category {
    width: 7.5em;
    font-size: 12px;
    }
    .eASY-assurance {
    height: 1.7rem;
    width: 3.8rem;
  }
   #offer-price {
    font-size: 20px;
   }
   #addtoCart {
    width: 11.4em;
   }
   #actualPrice{
    font-size: 17.5px;
    margin-top: -5px;
   }
   #offer-percentage {
    font-size: 12px;
   }
  }


  #addtoCart:hover {
    background-image: linear-gradient(to right, #199cad, rgb(81, 176, 207));
  }

  #addtoCart::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 300%;
    padding-top: 300%;
    background: rgba(255, 255, 255, 0.3);
    transform: translate(-70%, -50%) scale(0);
    opacity: 0;
    transition: transform 1s, opacity 1s;
  }

  #addtoCart:active::after {
    transform: translate(-70%, -50%) scale(1);
    opacity: 1;
    transition: 0s;
  }

  #out0fStock {
    width: 13.4em;
    background-color: rgb(175, 170, 170);
    color: #fff;
  }

  section {
    height: 100vh;
    overflow-y: auto;
  }

  section::-webkit-scrollbar {
    display: none;
  }

  /* Styles for the pop-up sidebar */
  .popup-sidebar {
    position: fixed;
    top: 50%;
    right: -300px;
    /* Initially hidden off-screen */
    width: 300px;
    background-color: #fff;
    box-shadow: 0 2px 8px rgba(21, 105, 131, 0.5);
    z-index: 1000;
    transition: right 1s ease-in-out;
    padding: 20px;
    overflow: hidden;
  }

  .popup-sidebar img {
    display: block;
    width: 100%;
    height: auto;
  }

  /* Adjustments for smaller screens */
  @media (max-width: 768px) {
    .popup-sidebar {
      top: 70%;
      right: -200px;
      transition: right 1s ease-in-out;
      padding: 10px;
      width: 200px;

    }

  }


  .flip-card {
    background-color: transparent;
    height: 10rem;
    border: 1px solid #f1f1f1;
    perspective: 1000px;
    /*For 3D effect */
  }

  /* This container is needed to position the front and back side */
  .flip-card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.8s;
    transform-style: preserve-3d;
  }

  /* Do an horizontal flip when you move the mouse over the flip box container */
  .flip-card:hover .flip-card-inner {
    transform: rotateY(180deg);
  }

  /* Position the front and back side */
  .flip-card-front,
  .flip-card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    /* Safari */
    backface-visibility: hidden;
  }

  /* Style the front side (fallback if image is missing) */
  .flip-card-front {
    background-color: transparent;
    color: black;
  }

  /* Style the back side */
  .flip-card-back {
    background-color: transparent;
    color: white;
    transform: rotateY(180deg);
  }


  a {
    text-decoration: none;
    /* Remove underline by default */
  }

  a:hover {
    text-decoration: none;
    /* Ensure underline does not appear on hover */
  }


  /*For showing notification on product added to cart */
  .addcart {
    width: 50px;
    height: 40px;
    position: relative;
    animation-name: mymove;
    animation-duration: 4s;

  }

  @keyframes mymove {
    from {
      left: -10px;
    }

    to {
      left: 55px;
    }
  }

  /* The Add to Cart showing animation(notification) - position it at the bottom and in the middle of the screen */
  #Ad {
    visibility: hidden;
    /* Hidden by default. Visible on click */
    min-width: 290px;
    /* Set a default minimum width */
    margin-left: -125px;
    /* Divide value of min-width by 2 */
    background-color: white;
    /* Black background color */
    color: rgb(40, 155, 155);
    /* White text color */
    text-align: center;
    font-weight: bold;
    font-size: large;
    /* Centered text */
    border-radius: 2px;
    /* Rounded borders */
    padding: 16px;
    /* Padding */
    position: fixed;
    /* Sit on top of the screen */
    z-index: 1;
    /* Add a z-index if needed */
    left: 50%;
    /* Center the Advertisement */
    bottom: 30px;
    /* 30px from the bottom */
    box-shadow: 0 2px 8px rgba(21, 105, 131, 0.5);
  }

  /* Show the Advertisement when clicking on a button (class added with JavaScript) */
  #Ad.show {
    visibility: visible;
    /* Show the Advertisement */
    /* Add animation: Take 0.5 seconds to fade in and out the Advertisement
  However, delay the fade out process for 2.5 seconds */
    -webkit-animation: fadein 0.5s, fadeout 0.5s 3s;
    animation: fadein 0.5s, fadeout 0.5s 2.5s;

  }

  /* Animations to fade the Advertisementin and out */
  @-webkit-keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }

    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @keyframes fadein {
    from {
      bottom: 0;
      opacity: 0;
    }

    to {
      bottom: 30px;
      opacity: 1;
    }
  }

  @-webkit-keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }

    to {
      bottom: 0;
      opacity: 0;
    }
  }

  @keyframes fadeout {
    from {
      bottom: 30px;
      opacity: 1;
    }

    to {
      bottom: 0;
      opacity: 0;
    }
  }

  /* The Modal (background) */
  .modal {
    display: none;
    /* Hidden by default */
    position: fixed;
    /* Stay in place */
    z-index: 1;
    /* Sit on top */
    left: 0;
    top: 0;
    width: 100%;
    /* Full width */
    height: 100%;
    /* Full height */
    overflow: auto;
    /* Enable scroll if needed */
    background-color: rgb(0, 0, 0);
    /* Fallback color */
    background-color: rgba(0, 0, 0, 0.4);
    /* Black w/ opacity */

  }

  /* Modal Content/Box */
  .modal-content {
    background-color: #fefefe;
    margin: 15% auto;
    /* 15% from the top and centered */
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 22px rgba(18, 155, 150, 0.5);
    width: 80%;
    /* Could be more or less, depending on screen size */
    max-width: 400px;
    /* Maximum width */
    text-align: center;
  }

  /* The Close Button */
  .close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }

  .close:hover,
  .close:focus {
    color: rgb(7, 63, 68);
    text-decoration: none;
    cursor: pointer;
  }


  .confirmBtn {
    background-image: linear-gradient(to left, #f07b0d, rgb(245, 157, 64));
    color: white;
    border: none;
    border-radius: 20px;
    padding: 10px 20px;
    margin: 10px;
  }

  .confirmBtn:hover {
    color: white;
  }
</style>